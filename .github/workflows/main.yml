name: CI Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build & Lint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ '20.x' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      # ========== BACKEND (root) ==========
      - name: Install backend dependencies
        run: yarn install --frozen-lockfile

      - name: Run backend linter
        run: yarn lint

      - name: Check backend code formatting
        run: yarn format

      - name: Backend TypeScript compilation check
        run: yarn tsc --noEmit

      # ========== FRONTEND (ws-client) ==========
      - name: Install frontend dependencies
        working-directory: ./frontend/ws-client
        run: yarn install --frozen-lockfile

      - name: Frontend TypeScript compilation check
        working-directory: ./frontend/ws-client
        run: yarn tsc --noEmit

      - name: Build frontend application
        working-directory: ./frontend/ws-client
        run: yarn build

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Install backend dependencies
        run: yarn install --frozen-lockfile

      - name: Run backend security audit
        run: yarn audit --level high
        continue-on-error: true
